Ajax
我对ajax的理解是这样的 ajax呢 主要用在前端和后台的交互过程中 数据传输 数据传递 这样的一个效果中 它是用来异步传输数据 异步？ 当我们点击刷新页面 或者是敲一个域名 回车之后 浏览器下边一般会有一个进度条 进度条刷满之后 页面将会打开 这叫做同步 异步？ 刷一个页面 滚动到底部 会转圈 内容出现 底下内容 一直加载 这样的现象叫异步 含义 不随大军行动 不随主流行动 到一个地方加载一个事件 让这个事件去单独一个请求 (大军和小分队 是异步) 异步就是一个小分块 或者是一个模块 单独去执行一个行为 他当然有触发条件 比如滚动条的触发 点击 移动 滑动 这样的触发 都是可以的 ajax 主要是干这个的 这就是他的概念 现在来说ajax 在前端基本上运用到每一个项目 所以在这儿 我把ajax 分为三个模块 1.原生js的ajax 2.JQ的ajax 3.框架当中的ajax 
1.js的ajax 当然是最底层的了 它在使用的时候 首先需要创建一个ajax的对象 IE 谷歌 火狐 都是不一样的 
IE：new active object XMLhttpRequest 它里边写的是Micosoft.XMLHTTP
火狐：new XMLhttpRequest 这是因为他们支持ajax封装底层的浏览器 不太一样 这是为了考虑兼容性来的 创建完ajax 对象之后 原生js提供了一个open 方法 open方法里有几个参数 比如 get post 提交方法 又比如 URL 请求的谁 又比如说是否异步 建立连接 建立连接之后 他还会对远程的产生一个监听 这个坚挺的方法叫做 onreadychange 这个事件会对远程服务器的状态进行一个监听 这个监听只有两个 一个是readystata 一个是 status 第一个是ajax 执行的过程的监听 主要有5个状态值 0 未初始化 1 载入 2 载入完成 3 开始交互 4 ajax执行完毕 只有 等于4的时候在表示执行完毕 其他都表示有问题 但是执行完毕又不代表执行成功 所有这时候又有了一个另外的参数 status =200 表示执行成功 成功之后 远程的后端会返回 responseText里面的数据 他放在responseText里面 注意它返回来之后 它是一个字符串 这时候不能直接处理 现在互联网上的数据 大多是json数据 把json对象转成json字符串 就可以进行处理了 它里边自带了一个jsonPath 我常用eval 把字符串转化为命令 这样就可以把json字符串放在eval 里边 就会把json字符串当成一个对象 去传值了 这样比较好理解 解析成对象之后 就可以把它当成数组 或者集合去处理 就可以把它当成一个遍历放到对应的地方就行了 这几句成了DOM操作 这是原生js里边的操作方法 
2.JQ 本身使用JS封装的 它里边有几个参数 比如 type URL data dataType success error type指定的是get 和post 两个传递方式 URL 接口 dataType 传回来的值 在同源的情况下是jsonp success 是请求完成后调用的回调函数 error是请求失败后调用的方法 在这里要注意 URL 它称呼有好多种 1.接收数据的路径 2.接收数据的接口（接收到的就是json格式的数据这时候我们也可以去解析 但是这样的不同元的 同源指的是 同协议 同域名 同端口 但往往在项目中 一台服务器是不可能的 往往是多台 这时候需要跨域 现在一般用的就是jsonp 这时候dataType 就要指定成jsonp 而不是json 第二步 在路径传回来的值上面 有一个callback 这样的回调函数 它会传递回来json对象 我们需要启动这个过程去解析这个对象 这个过程就一样了 跨域的行为就是在传输的过程中违反了同源策略 这就是ajax在跨域的时候的解决办法 现在随着前端技术的发展 原生js用的少 jq用的多了 大概有6成的公司 用的vue框架 两三成的公司再用react 一成在用angla vue是单页面开发app的应用 所以vue也是封装了ajax这样的操作的 常使用的有两种 1.fetch 2.axios fetch是vue当中可以直接调用的 axios是一个promise 的一个提供给我们http的发送请求的一个组件 使用的时候需要安装它 npm install axios --save 就可以用import在载入这个包了 调用的时候可以在方法里边直接写 比如 axios.post / axios.get ） 
缺点：1.ajax是异步请求 所以不能点击后退 不能用back按钮去呈现上一步的操作 他把back机制屏蔽了
2.我们在传输数据的一般用get传输数据的比较多 这样就会不太安全 
3.不太利于搜索引擎 对自然排名不太友好 
有利有弊！\